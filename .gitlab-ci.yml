variables:
  VERSION:
    value: $CI_COMMIT_REF_SLUG
    description: Nom de la version
  TAGS: ""

build-docker:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:23.0.1-git
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:23.0.1-dind
      alias: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker run --privileged --rm tonistiigi/binfmt --install all
    - docker buildx create --use --name multi-arch-builder --driver-opt network=host --driver-opt image=moby/buildkit:v0.10.6
  script:
    - docker buildx build --platform linux/amd64,linux/arm64 -t $CI_REGISTRY_IMAGE:$VERSION $TAGS -f ci/Dockerfile --push .
  after_script:
    - docker logout
    # - docker buildx rm multi-arch-builder

deploy-stack:
  stage: deploy
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:23.0.1
  variables:
    DOMAIN: gwynt.papierpain.fr
  script:
    - docker stack deploy -c ci/docker-compose.yml --prune --with-registry-auth ${CI_PROJECT_NAME}
  environment:
    name: production
    url: https://gwynt.papierpain.fr

workflow:
  name: üí• (‚ïØ¬∞‚ñ°¬∞)‚ïØÔ∏µ ‚îª‚îÅ‚îª üí• $VERSION
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: always
    - when: never
    - if: $CI_COMMIT_BRANCH == 'develop'
      variables:
        TAGS: -t $CI_REGISTRY_IMAGE:latest
    - if: $CI_COMMIT_BRANCH == 'master' || $CI_COMMIT_TAG
      variables:
        TAGS: -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:stable
